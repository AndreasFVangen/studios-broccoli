import "reflect-metadata";
export declare function objectType(target: any): void;
export declare function inputType(target: any): void;
export declare function field(target: any, key: string): void;
export declare function list(target: any, key: string): void;
export declare function scalarType(target: any): void;
export declare module graphqlTs {
    function getSchema(): any;
    function init<T>(query: T): void;
    function query(query: string): Promise<any>;
}
export declare function required(name: [string]): {
    (target: Function): void;
    (target: Object, propertyKey: string | symbol): void;
};
export declare function description(text: string): {
    (target: Function): void;
    (target: Object, propertyKey: string | symbol): void;
};
export declare function nullable(nullable: boolean): {
    (target: Function): void;
    (target: Object, propertyKey: string | symbol): void;
};
export declare function returnType<T>(objectType: T): {
    (target: Function): void;
    (target: Object, propertyKey: string | symbol): void;
};
export declare function mutation(target: any, key: string): void;
